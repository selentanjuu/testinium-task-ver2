// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class GittiGidiyorTestTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void gittiGidiyorTest() {
    // Test name: GittiGidiyorTest
    // Step # | name | target | value
    // 1 | open | / | 
    driver.get("https://www.gittigidiyor.com/");
    // 2 | setWindowSize | 1552x840 | 
    driver.manage().window().setSize(new Dimension(1552, 840));
    // 3 | click | css=.gekhq4-5 > .gekhq4-6 > .gekhq4-4 | 
    driver.findElement(By.cssSelector(".gekhq4-5 > .gekhq4-6 > .gekhq4-4")).click();
    // 4 | click | linkText=Giriş Yap | 
    driver.findElement(By.css).click();
    // 5 | click | id=L-UserNameField | 
    driver.findElement(By.id("L-UserNameField")).click();
    // 6 | type | id=L-UserNameField | selenntanjuu@gmail.com
    driver.findElement(By.id("L-UserNameField")).sendKeys("selenntanjuu@gmail.com");
    // 7 | click | id=L-PasswordField | 
    driver.findElement(By.id("L-PasswordField")).click();
            // 8 | type | id=L-PasswordField | 132612sT.
            driver.findElement(By.id("L-PasswordField")).sendKeys("132612sT.");
    // 9 | click | css=.gg-uw-24:nth-child(1) > .clearfix | 
    driver.findElement(By.cssSelector(".gg-uw-24:nth-child(1) > .clearfix")).click();
    // 10 | click | id=gg-login-enter | 
    driver.findElement(By.id("gg-login-enter")).click();

    // 11 | click | name=k | 
    driver.findElement(By.name("k")).click();
    // 12 | type | name=k | Bilgisayar
    driver.findElement(By.name("k")).sendKeys("Bilgisayar");
    // 13 | click | css=.ymqsgy-4:nth-child(3) .ymqsgy-3 | 
    driver.findElement(By.cssSelector(".ymqsgy-4:nth-child(3) .ymqsgy-3")).click();
    // 14 | runScript | window.scrollTo(0,118.4000015258789) |
    ,    js.executeScript("window.scrollTo(0,118.4000015258789)");
    JVG// 15 | click | css=#item-info-block-663465976 .img-cont |
    driver.findElement(By.cssSelector("#item-info-block-663465976 .img-cont")).click();
    // 16 | runScript | window.scrollTo(0,301.6000061035156) | 
    js.executeScript("window.scrollTo(0,301.6000061035156)");
    // 17 | click | id=add-to-basket | 
    driver.findElement(By.id("add-to-basket")).click();
    // 18 | mouseOver | linkText=Gizlilik Politikası | 
    {
      WebElement element = driver.findElement(By.linkText("Gizlilik Politikası"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    // 19 | runScript | window.scrollTo(0,393.6000061035156) | 
    js.executeScript("window.scrollTo(0,393.6000061035156)");
    // 20 | mouseOver | id=big-photo | 
    {
      WebElement element = driver.findElement(By.id("big-photo"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    // 21 | mouseOut | id=big-photo | 
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    // 22 | click | id=add-to-basket | 
    driver.findElement(By.id("add-to-basket")).click();
    // 23 | click | linkText=Sepete Git | 
    driver.findElement(By.linkText("Sepete Git")).click();
    // 24 | click | css=.gg-input-select > .amount | 
    driver.findElement(By.cssSelector(".gg-input-select > .amount")).click();
    // 25 | select | css=.gg-input-select > .amount | label=1
    {
      WebElement dropdown = driver.findElement(By.cssSelector(".gg-input-select > .amount"));
      dropdown.findElement(By.xpath("//option[. = '1']")).click();
    }
    // 26 | click | css=.gg-input-select > .amount | 
    driver.findElement(By.cssSelector(".gg-input-select > .amount")).click();
    // 27 | click | css=.product-item-box-container | 
    driver.findElement(By.cssSelector(".product-item-box-container")).click();
    // 28 | click | css=.gg-input-select > .amount | 
    driver.findElement(By.cssSelector(".gg-input-select > .amount")).click();
    // 29 | select | css=.gg-input-select > .amount | label=2
    {
      WebElement dropdown = driver.findElement(By.cssSelector(".gg-input-select > .amount"));
      dropdown.findElement(By.xpath("//option[. = '2']")).click();
    }
    // 30 | click | css=.gg-input-select > .amount | 
    driver.findElement(By.cssSelector(".gg-input-select > .amount")).click();
    // 31 | click | css=.gg-input-select > .amount | 
    driver.findElement(By.cssSelector(".gg-input-select > .amount")).click();
    // 32 | select | css=.gg-input-select > .amount | label=1
    {
      WebElement dropdown = driver.findElement(By.cssSelector(".gg-input-select > .amount"));
      dropdown.findElement(By.xpath("//option[. = '1']")).click();
    }
    // 33 | click | css=.gg-input-select > .amount | 
    driver.findElement(By.cssSelector(".gg-input-select > .amount")).click();
    // 34 | click | css=.row > .btn-delete > .gg-icon | 
    driver.findElement(By.cssSelector(".row > .btn-delete > .gg-icon")).click();
  }
}
